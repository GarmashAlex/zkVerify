// Copyright 2024, Horizen Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_risc0_verifier`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 31.0.0
//! DATE: 2024-06-25, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `53229d0ad46d`, CPU: `AMD EPYC 7571`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// /usr/local/bin/zkv-node
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet-risc0-verifier
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --heap-pages=4096
// --header
// /data/benchmark/HEADER-APACHE2
// --output
// /data/benchmark/runtime/src/weights/pallet_risc0_verifier.rs
// --template
// /data/benchmark/node/zkv-deploy-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weights for `pallet_risc0_verifier` using the zkVerify node and recommended hardware.
pub struct ZKVWeight<T>(PhantomData<T>);

impl<T: frame_system::Config> pallet_risc0_verifier::WeightInfo for ZKVWeight<T> {
    /// Storage: `Poe::NextAttestation` (r:1 w:0)
    /// Proof: `Poe::NextAttestation` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
    /// Storage: `Poe::Values` (r:1 w:1)
    /// Proof: `Poe::Values` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
    /// Storage: `Timestamp::Now` (r:1 w:0)
    /// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
    /// Storage: `Poe::FirstInsertionTime` (r:0 w:1)
    /// Proof: `Poe::FirstInsertionTime` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
    fn submit_proof_cycle_2_pow_12() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_13() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_14() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_15() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_16() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_17() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_18() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_19() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_20() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_21() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_22() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_23() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_cycle_2_pow_24() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `74`
        //  Estimated: `3537`
        // Minimum execution time: 30_461_753_000 picoseconds.
        Weight::from_parts(32_220_511_000, 3537)
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    
    /// Storage: `SettlementRisc0Pallet::Vks` (r:1 w:0)
    /// Proof: `SettlementRisc0Pallet::Vks` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
    /// Storage: `Poe::NextAttestation` (r:1 w:0)
    /// Proof: `Poe::NextAttestation` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
    /// Storage: `Poe::Values` (r:1 w:1)
    /// Proof: `Poe::Values` (`max_values`: None, `max_size`: Some(72), added: 2547, mode: `MaxEncodedLen`)
    /// Storage: `Timestamp::Now` (r:1 w:0)
    /// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
    /// Storage: `Poe::FirstInsertionTime` (r:0 w:1)
    /// Proof: `Poe::FirstInsertionTime` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
    fn submit_proof_with_vk_hash_cycle_2_pow_12() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_13() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_14() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_15() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_16() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_17() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_18() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_19() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_20() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_21() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_22() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_23() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    fn submit_proof_with_vk_hash_cycle_2_pow_24() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `206`
        //  Estimated: `3537`
        // Minimum execution time: 30_527_292_000 picoseconds.
        Weight::from_parts(36_262_555_000, 3537)
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }

    /// Storage: `SettlementRisc0Pallet::Vks` (r:0 w:1)
    /// Proof: `SettlementRisc0Pallet::Vks` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
    fn register_vk() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 13_420_000 picoseconds.
        Weight::from_parts(13_960_000, 0)
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
}
